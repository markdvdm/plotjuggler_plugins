---
# common busObject schema 
#
# This file defines the schema of bus object messages, serializable
# nuggets of data that can live within the `busRegistry`.
# 
# The gist is: 
#   - inheritance supported (multiple layers supported)
#   - default `inherit` field (i.e. parent class) is `BusObject`
# 
# Information on the set of available fields are as follwos:
#
# - class :                 (Required - key in class dictionary)
#    name : NameofObj       (Required - key always 'name', value user imagination) 
#    inherit :              (Optional - iheritance dictionary) 
#      name : some_namespace::SomeName  (Required - name of parent class. 
#                                       Namespace can be ignored if the class namespace
#                                       is the same as the parent namespace) 
#    members :              (Required - list of member dictionaries)
#      - name : None        (Required - key always 'name', '_' added to end of generated name)
#        type : None        (Required - Supported types: 
#                                       fix-width integeres, float,
#                                       double, enums (per enumerates_schema),
#                                       or stuct (per this file). 
#                                       Arrays support, i.ee: `type : uint8_t[10]`)
#        default : None     (Optional - default initalized value)
#    # metadata is calculated and added by elroy_common_msg_generator.py.
#    # it is included here for the curious typer 
#    metadata :
#     inherit : 
#       children : True/False   (If this class has children, generated protected constructor)
#       members : 
#         - name : None         (data member name, copied from above)
#           array_len : X       (int(X) > 0)
#       file :
#         name : None           (name of file, no extension)
#         path : None           (aboslute path of the file, no extension)
#         header :              (header ifle info)
#           extension: ".h"
#           include_guard:      (header file include guard)
#           includes :          (list of header include files: parent classes, enums, etc)
#            - None
#            - None
#
# BusObject is auto generated to its own template in ./template/
# usually you don't this. Required (plz don't delete)
- class : 
    name: BusObject
    members :
      # message IDs are an enumeration starting at 1
      # with each new class being += 1
        - name : id
          type: MessageId
        - name : write_timestamp_ns
          type: int64_t
          default : 0x00
        - name: mutex
          type: std::mutex
      
# The people's messages below
- class :
    name: AirDataState 
    inherit : 
      name : BusObject
    members : 
      - name : pressure_alt_ft
        type: double
        default : 0.0
      - name : cal_airspeed_kts
        type: double
        default : 0.0
      - name : alpha_deg
        type: double
        default: 0.0
      - name : beta_deg
        type: double
        default : 0.0
      - name : static_res_mb 
        type: double
        default : 0.0
      - name : impact_pres_mb
        type: double
        default : 0.0
      - name : an_array
        type: uint8_t[5]
        default: 1
      - name : version_number
        type: VersionNumber[2]
- class : 
    name : DoubleInherit
    inherit : 
      name : AirDataState
    members :
      - name : foo
        type: uint32_t[10]
        default: 0
      - name : bar 
        type: uint8_t
      - name : taco
        type: uint8_t[3]
- class :
    name : VersionNumber
    inherit : 
      name : BusObject
    members : 
      - name: system_component
        type : SystemComponentIdentity 
      - name : major 
        type : uint16_t
      - name : minor 
        type : uint16_t
      - name : patch
        type : uint16_t
- class : 
    name : FogInsState
    inherit : 
      name : BusObject
    members : 
      - name : system_status
        type : uint16_t
      - name : filter_status
        type : uint16_t 
      - name : unix_time_seconds
        type : uint32_t
      - name : microseconds 
        type : uint32_t
      - name : latitude
        type : double
      - name : longitude
        type : double 
      - name : velocity
        type : float[3]
      - name : body_acceleration
        type : float[3]
      - name : g_force
        type : float
      - name : orientation
        type : float[3]
      - name : angular_velocity
        type : float[3]
      - name : standard_deviation
        type : float[3]