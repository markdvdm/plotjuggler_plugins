---
# common busObject schema
#
# This file defines the schema of bus object messages, serializable
# nuggets of data that can live within the `busRegistry`.
#
# The gist is:
#   - inheritance supported (multiple layers supported)
#   - default `inherit` field (i.e. parent class) is `BusObject`
#
# Information on the set of available fields are as follows:
#
# - class :                 (Required - key in class dictionary)
#    name : NameofObj       (Required - key always 'name', value user imagination)
#    inherit :              (Optional - inheritance dictionary)
#      name : SomeName      (Required - name of parent class)
#    members :              (Required - list of member dictionaries)
#      - name : None        (Required - key always 'name', '_' added to end of generated name)
#        type : None        (Required - Supported types:
#                                       fix-width integers, float,
#                                       double, enums (per enumerates_schema),
#                                       or struct (per this file).
#                                       Arrays support, i.ee: `type : uint8_t[10]`)
#        default : None     (Optional - default initialized value)
#    # metadata is calculated and added by elroy_common_msg_generator.py.
#    # it is included here for the curious typer
#    metadata :
#     inherit :
#       children : True/False   (If this class has children, generated protected constructor)
#       members :
#         - name : None         (data member name, copied from above)
#           array_len : X       (int(X) > 0)
#       file :
#         name : None           (name of file, no extension)
#         path : None           (absolute path of the file, no extension)
#         header :              (header ifle info)
#           extension: ".h"
#           include_guard:      (header file include guard)
#           includes :          (list of header include files: parent classes, enums, etc.)
#            - None
#            - None
#
# BusObject is auto generated to its own template in ./template/
# usually you don't this. Required (plz don't delete)
- class:
    name: BusObject
    members:
      # message IDs are an enumeration starting at 1
      # with each new class being += 1
      - name: id
        type: MessageId
      - name: write_timestamp_ns
        type: int64_t
        default: 0x00
      - name: mutex
        type: std::mutex

# The following messages are used for automated testing. Please do not modify or re-order these messages. If necessary,
# prefer to add more test messages rather than modify existing ones.
- class:
    name: TestMsgDefaultEnums
    namespace: test_messages
    inherit:
      name: BusObject
    members:
      - name: struct1
        type: TestStructDefaultEnums
      - name: enum1
        type: TestEnum
        default: TestEnum::FirstEnumValue
- class:
    name: TestMsgSingleField
    namespace: test_messages
    inherit:
      name: BusObject
    members:
      - name: uint8_field
        type: uint8_t
        default: 99

# END test messages

# The people's messages below

# The following messages are placed at the beginning of this file to ensure that their generated message IDs remain the
# same even if new messages are added to this file. Please place any new messages _after_ these messages.

# ----------------------------------- #
# GCS definitions
# ----------------------------------- #
- class:
    name: GcsCommand
    # GCS Command provides a base for data required in all commands from the GCS.
    inherit:
      name: BusObject
    members:
      - name: transaction_id
        type: uint32_t
- class:
    name: FlightComputerReboot
    # Reboot commands encapsulate the type of reboot a device should be commanded to perform.
    # The identity may not be used in practice since network hardware can handle routing to specific devices.
    inherit:
      name: GcsCommand
    members:
      - name: component
        type: SystemComponentInstance
      - name: reboot_type
        type: RebootType

- class:
    name: CollectiveThrusterCommand
    inherit:
      name: GcsCommand
    members:
      - name: start_stop # true = start, false = stop, if stopped, all other values are don't-care
        type: bool
      - name: vl_cmd
        type: float[8]
      - name: fp_cmd
        type: float[4]

# ETC for emulating RC link health scenarios including loss:
- class:
    name: RemoteControlSetLinkHealth
    inherit:
      name: GcsCommand
    members:
      - name: run_stop
        type: bool
      - name: rc_health
        type: HealthLevel[2]

# ETC for powerplant ramp down or "Knock It Off":
- class:
    name: KnockItOff
    inherit:
      name: GcsCommand

# Used by log parsers to determine ecm version,
#   frozen to allow future compatablity
- class:
    name: HeartBeat
    inherit:
      name: BusObject
    members:
      - name: component
        type: SystemComponentInstance
      - name: ecm_version # version of ECM itself
        type: VersionInfo
      - name: messenger_version # version of whoever sent the message
        type: VersionInfo

# (end messages that should remain at the beginning of this file)
# ##########

- class:
    name: AirDataState
    inherit:
      name: BusObject
    members:
      - name: pressure_alt_ft
        type: float
      - name: cal_airspeed_kts
        type: float
      - name: alpha_deg
        type: float
      - name: beta_deg
        type: float
      - name: static_pres_mb
        type: float
      - name: impact_pres_mb
        type: float
- class:
    name: FogInsState
    inherit:
      name: BusObject
    members:
      - name: system_status
        type: uint16_t
      - name: filter_status
        type: uint16_t
      - name: unix_time_seconds
        type: uint32_t
      - name: microseconds
        type: uint32_t
      - name: latitude
        type: double
      - name: longitude
        type: double
      - name: height
        type: double
      - name: velocity
        type: float[3]
      - name: body_acceleration
        type: float[3]
      - name: g_force
        type: float
      - name: orientation
        type: float[3]
      - name: angular_velocity
        type: float[3]
      - name: standard_deviation
        type: float[3]
- class:
    name: MemsInsState
    inherit:
      name: BusObject
    members:
      - name: time_ns
        type: uint64_t
      - name: ypr
        type: float[3]
      - name: angle_rate
        type: float[3]
      - name: pos_lla
        type: double[3]
      - name: vel_ned
        type: float[3]
      - name: body_accel
        type: float[3]
      - name: ins_status
        type: uint16_t
      - name: gps1_num_sats
        type: uint8_t
      - name: pos_uncertainty
        type: float
      - name: vel_uncertainty
        type: float
      - name: gps2_num_sats
        type: uint8_t
# The AltimeterUsd1State message is used by the US-D1 radar altimeter.
- class:
    name: AltimeterUsd1State
    inherit:
      name: BusObject
    members:
      - name: altitude_m
        type: float
      - name: snr
        type: uint8_t
# The AltimeterAR3000State message is used by the Acuity AR3000 laser altimeter.
- class:
    name: AltimeterAR3000State
    inherit:
      name: BusObject
    members:
      - name: distance_in_m
        type: float
      - name: signal_strength
        type: uint16_t
      - name: temperature_in_c
        type: float
# The AltimeterAR3000State message is used by the Acuity AR3000 laser altimeter.
- class:
    name: AltimeterAR3000DriverStats
    inherit:
      name: BusObject
    members:
      - name: parsed_packets
        type: uint32_t
      - name: dropped_bytes
        type: uint32_t
- class:
    name: SystemComponentHealthReport
    # Health report for a specific system component.
    inherit:
      name: BusObject
    members:
      - name: component
        type: SystemComponentInstance
      - name: report
        type: HealthReport
- class:
    name: AvionicsState
    inherit:
      name: BusObject
    members:
      - name: component
        type: SystemComponentInstance
- class:
    name: VlThrusterState
    inherit:
      name: AvionicsState
    members:
      - name: controller_state
        type: uint8_t
      - name: motor_current_amps
        type: float
      - name: setpoint_current_amps
        type: float
      - name: motor_rpm
        type: uint16_t
      - name: dc_bus_voltage
        type: uint16_t
      - name: motor_temp_one_c
        type: uint16_t
      - name: motor_temp_two_c
        type: uint16_t
      - name: controller_temp_c
        type: uint16_t
- class:
    name: FpThrusterState
    inherit:
      name: AvionicsState
    members:
      - name: status
        type: uint8_t
      - name: command_feedback
        type: int16_t
      - name: error_codes_one
        type: uint8_t
      - name: error_codes_two
        type: uint8_t
      - name: dsp_temp_c
        type: int16_t
      - name: igbt_temp_c
        type: int16_t
      - name: external_temp_a_c
        type: int16_t
      - name: motor_rpm
        type: int16_t
      - name: motor_iq_current_amps
        type: int16_t
      - name: dc_bus_voltage
        type: uint8_t
- class:
    name: CsState
    inherit:
      name: AvionicsState
    members:
      - name: current_position_deg
        type: float
      - name: setpoint_position_deg
        type: float
      - name: current_ma
        type: int16_t
      - name: motor_temp_c
        type: int16_t
- class:
    name: PilotCommandState
    inherit:
      name: AvionicsState
    members:
      - name: roll_axis
        type: float
        default: 0.0
      - name: pitch_axis
        type: float
        default: 0.0
      - name: yaw_axis
        type: float
        default: 0.0
      - name: lift_axis
        type: float
        default: 0.0
      - name: disarm_a
        type: RcSwitchState
      - name: disarm_b
        type: RcSwitchState
      - name: pilot_in_control
        type: RcSwitchState
- class:
    name: PilotCommandRedundancySolution
    inherit:
      name: PilotCommandState
    members:
      - name: solution
        type: ActivePassiveRedundancyResult

- class:
    name: ComponentCommunicationStatisticsReport
    # Health report for a specific system component.
    inherit:
      name: BusObject
    members:
      - name: component
        type: SystemComponentInstance
      - name: report
        type: CommunicationStatisticsReport

- class:
    name: ActuatorCommands
    # this message must remain consistent with `afc/codegen/ElroyAutodcode_types.h`
    # ActuatorCmdsBusObj (line 708) except for the addition of the clear_motor_faults
    # flag, this is a departure from ActuatorCmdsBusObj
    inherit:
      name: BusObject
    members:
      - name: thruster_cmds_a
        type: ThrusterCommands
      - name: cs_servo_cmds_deg
        type: CsServoCommands
      - name: clear_motor_faults
        type: bool
        default: false
      - name: actuator_mode
        type: Mode

- class:
    name: FlightTerminationSystemState
    inherit:
      name: BusObject
    members:
      - name: terminate_cmd # Filtered terminate command.
        type: bool
      - name: terminate_raw # Raw value from the terminate switch.
        type: bool
      - name: terminate_timer_ns # Time since the terminate switch was activated.
        type: uint64_t
      - name: ecbu_breaker_pull_delay_ms # Currently configured breaker pull timeout in ms
        type: uint64_t

- class:
    name: LowVoltageBackupBatteryState
    inherit:
      name: AvionicsState
    members:
      - name: timestamp_ns
        type: uint64_t
      - name: pack_voltage
        type: float
      - name: cell_voltage
        type: float[6]
      - name: cell_temp
        type: float[6]
      - name: est_soc_fract
        type: float
      - name: est_rem_capacity_ah
        type: float
      - name: bus_voltage
        type: float
      - name: total_current
        type: float
      - name: is_lv_bus_attached
        type: bool
      - name: is_charging
        type: bool
- class:
    name: MagicallState
    inherit:
      name: AvionicsState
    members:
      - name: timestamp_ns
        type: uint64_t
      - name: current_amps
        type: float
      - name: rpm
        type: float
      - name: battle_mode
        type: bool
      - name: flight_mode
        type: bool
      - name: warning_flag
        type: bool
      - name: fault_flag
        type: bool
      - name: state
        type: uint8_t
      - name: st_standby_state
        type: bool
      - name: st_start_state
        type: bool
      - name: st_run_state
        type: bool
      - name: st_fault_state
        type: bool
      - name: st_bootloader_state
        type: bool
      - name: st_high_voltage
        type: bool
      - name: st_standby_mode
        type: bool
      - name: st_current_ctr_mode
        type: bool
      - name: st_speed_ctrl_mode
        type: bool
      - name: st_fault_mode
        type: bool
      - name: w_dc_bus_high
        type: bool
      - name: w_dc_bus_low
        type: bool
      - name: w_twelve_supply_high
        type: bool
      - name: w_twelve_volt_supply_low
        type: bool
      - name: w_five_volt_supply_high
        type: bool
      - name: w_five_volt_supply_low
        type: bool
      - name: w_three_point_three_supply_high
        type: bool
      - name: w_three_point_three_supply_low
        type: bool
      - name: w_motor_temp1_high
        type: bool
      - name: w_motor_temp2_high
        type: bool
      - name: w_rpm_high
        type: bool
      - name: w_rpm_low
        type: bool
      - name: w_eeprom
        type: bool
      - name: w_firmware
        type: bool
      - name: w_hall_sensors
        type: bool
      - name: w_hall_sensor_A
        type: bool
      - name: w_hall_sensor_B
        type: bool
      - name: w_hall_sensor_C
        type: bool
      - name: w_motor_reset
        type: bool
      - name: w_comm_reset
        type: bool
      - name: w_housing_temp_open
        type: bool
      - name: w_housing_temp_short
        type: bool
      - name: w_motor_temp1_open
        type: bool
      - name: w_motor_temp1_short
        type: bool
      - name: w_motor_temp2_open
        type: bool
      - name: w_motor_temp2_short
        type: bool
      - name: f_phase_a_current_high
        type: bool
      - name: f_phase_b_current_high
        type: bool
      - name: f_phase_c_current_high
        type: bool
      - name: f_dc_bus_high
        type: bool
      - name: f_dc_bus_low
        type: bool
      - name: f_twelve_supply_high
        type: bool
      - name: f_twelve_volt_supply_low
        type: bool
      - name: f_five_volt_supply_high
        type: bool
      - name: f_five_volt_supply_low
        type: bool
      - name: f_three_point_three_supply_high
        type: bool
      - name: f_three_point_three_supply_low
        type: bool
      - name: f_rpm_high
        type: bool
      - name: f_rpm_low
        type: bool
      - name: f_motor_watchdog
        type: bool
      - name: f_invalid_motor_id
        type: bool
      - name: f_comm_loss
        type: bool
      - name: f_housing_temp_high
        type: bool
      - name: f_motor_temp_one_high
        type: bool
      - name: f_motor_temp_two_high
        type: bool
      - name: f_hall_sensors
        type: bool
      - name: f_hall_sensor_A
        type: bool
      - name: f_hall_sensor_B
        type: bool
      - name: f_hall_sensor_C
        type: bool
      - name: f_power_on_reset
        type: bool
      - name: f_failed_to_start
        type: bool
      - name: f_hw_phase_a_current_high
        type: bool
      - name: f_hw_phase_b_current_high
        type: bool
      - name: f_hw_bus_voltage_high
        type: bool
      - name: f_hw_phase_A_driver_fault
        type: bool
      - name: f_hw_phase_B_driver_fault
        type: bool
      - name: f_hw_phase_C_driver_fault
        type: bool
      - name: f_hw_estop
        type: bool
      - name: fc_msg_rate
        type: double
      - name: mc_msg_rate
        type: double
      - name: motor_rx_msg_count
        type: uint16_t
      - name: afc_tx_msg_count
        type: uint64_t
      - name: afc_rx_msg_count
        type: uint64_t
      - name: comms_loss_action
        type: MagicallCommsLossActionEnum
      - name: comms_wdt_seconds
        type: float

# ----------------------------------- #
# mode_control definitions
# ----------------------------------- #
- class:
    name: ModeControllerState
    # Controller state is a type of feedback which aggregates the current and previous state of a mode controller.
    # This mirrors ModeControllerStateBus in AFC_Code/3.AFC_code_M/VehicleModeManager/getVehicleModeManagerBusObjects.m.
    inherit:
      name: BusObject
    members:
      - name: mode_controller_type
        type: ModeController
      - name: current_mode
        type: Mode
      - name: last_requested_mode
        type: Mode
      - name: last_mode_request_result
        type: ModeTransitionRequestResult
- class:
    name: ModeControllerStates
    # ModeControllerStates aggregates the states of all mode controllers.
    # This mirrors SystemModeControllerStatesBus in AFC_Code/3.AFC_code_M/VehicleModeManager/getVehicleModeManagerBusObjects.m.
    inherit:
      name: BusObject
    members:
      - name: states
        type: ModeControllerState[12]
- class:
    name: ModeRequest
    # Mode requests encapsulate a desired mode for a specified mode controller.
    # This mirrors ModeTransitionRequest in AFC_Code/3.AFC_code_M/VehicleModeManager/getVehicleModeManagerBusObjects.m.
    inherit:
      name: GcsCommand
    members:
      - name: controller
        type: ModeController
      - name: mode
        type: Mode
- class:
    name: ModeRequestReturnData
    # Request return data are a type of feedback which associate a request ID with its asynchronous mode controller request return.
    # This mirrors ModeRequestReturnBus in AFC_Code/3.AFC_code_M/VehicleModeManager/getVehicleModeManagerBusObjects.m.
    inherit:
      name: BusObject
    members:
      - name: request_id
        type: uint32_t
      - name: request_return
        type: ModeRequestReturn
- class:
    name: ModeRequestResultData
    # This is a type of feedback which associates a request ID with its asynchronous resulting mode controller state.
    inherit:
      name: BusObject
    members:
      - name: request_id
        type: uint32_t
      - name: request_result
        type: ModeTransitionRequestResult
- class:
    name: ModeRequestTransaction
    # Mode request transactions are a type of feedback which associate a request return with the transaction that caused the request.
    # Mode controllers do not need to know use this information because it is only for the GCS to associate visual feedback for requests.
    inherit:
      name: BusObject
    members:
      - name: request_id
        type: uint32_t
      - name: transaction_id
        type: uint32_t

# ----------------------------------- #
# ETC definitions
# ----------------------------------- #
- class:
    name: EtcRequest
    # ETC requests encapsulate a desired ETC ID. 0 corresponds to a cancel/null request.
    inherit:
      name: GcsCommand
    members:
      - name: id
        type: uint32_t
- class:
    name: EtcStatus
    # ETC status encapsulates the status of a requested ETC.
    # This uses part of EtcInputBus from AFC_Code/3.AFC_code_M/ETC/getEtcBusObjects.m.
    inherit:
      name: BusObject
    members:
      - name: channel
        type: EtcChannel
      - name: test_number
        type: uint8_t
      - name: objective_state
        type: EtcObjectiveState
      - name: signal_value
        type: float
      - name: total_duration_seconds
        type: float
- class:
    name: EtcParameters
    # ETC parameters encapsulate the parameters (virtual test card) of a requested ETC.
    # This mirrors EtcParamBus in AFC_Code/3.AFC_code_M/ETC/getEtcBusObjects.m.
    inherit:
      name: BusObject
    members:
      - name: channel
        type: EtcChannel
      - name: signal_type
        type: EtcSignalType
      - name: parameter_values
        type: float[8]

- class:
    name: EtcParamsFPSetCommand
    inherit:
      name: GcsCommand
    members:
      - name: thruster_index
        type: uint8_t
      - name: value_amps_or_rpm # dependent on command mode
        type: float

- class:
    name: EtcParamsFPSetAll
    inherit:
      name: GcsCommand
    members:
      - name: value_amps_or_rpm # dependent on command mode
        type: float

- class:
    name: EtcParamsFPSetMode
    inherit:
      name: GcsCommand
    members:
      - name: mode
        type: uint8_t # 0 = current, 1 = RPM

- class:
    name: EtcParamsVLSetCommand
    inherit:
      name: GcsCommand
    members:
      - name: thruster_index
        type: uint8_t
      - name: value_amps_or_rpm # dependent on command mode
        type: float

- class:
    name: EtcParamsVLSetAll
    inherit:
      name: GcsCommand
    members:
      - name: value_amps_or_rpm # dependent on command mode
        type: float

- class:
    name: EtcParamsVLSetMode
    inherit:
      name: GcsCommand
    members:
      - name: mode
        type: uint8_t # 0 = current, 1 = RPM

- class:
    name: EtcParamsVLAndFPSetAll
    inherit:
      name: GcsCommand
    members:
      - name: vl_value_amps_or_rpm # dependent on VL command mode
        type: float
      - name: fp_value_amps_or_rpm # dependent on FP command mode
        type: float

- class:
    name: EtcParamsClearMotorFaults
    inherit:
      name: GcsCommand
      # Note: no parameters other than the GcsCommand transaction ID

- class:
    name: EtcParamsEcbuSetSwitchCommand
    inherit:
      name: GcsCommand
    members:
      - name: component
        type: SystemComponentInstance
      - name: ecb_id
        type: uint8_t # 0 = all, or 1 - 24 for individual
      - name: command
        type: uint8_t # See ICD for value

- class:
    name: EtcParamsEcbuSetBreakerCommand
    inherit:
      name: GcsCommand
    members:
      - name: component
        type: SystemComponentInstance
      - name: ecb_id
        type: uint8_t # 0 = all, or 1 - 24 for individual
      - name: command
        type: uint8_t # See ICD for value

- class:
    name: EtcParamsLoadControlCommand
    inherit:
      name: GcsCommand
    members:
      - name: flight_computer_identity
        type: uint8_t # see flight_software/config_params/identity.h
      - name: instance_id
        type: InstanceId # Generic ETC will transmit 0-based, while this enum is 1-based
      - name: command
        type: LoadControlCommand # Generic ETC will transmit 0-based, while this enum is 1-based

- class:
    name: EtcParamsLVBackupBatteryClearFaults
    inherit:
      name: GcsCommand
    members:
      - name: component
        type: SystemComponentInstance
      - name: clear_faults
        type: bool # true = clear faults, false = nop

- class:
    name: EtcParamsLVBackupBatterySetDetachAttach
    inherit:
      name: GcsCommand
    members:
      - name: component
        type: SystemComponentInstance
      - name: detach
        type: bool # true = detach, false = attach

- class:
    name: EtcParamsLVBackupBatterySetChargeCurrent
    inherit:
      name: GcsCommand
    members:
      - name: component
        type: SystemComponentInstance
      - name: max_charge_current
        type: float # 0 - 3, where 0 is "disabled"

# ----------------------------------- #
# mission_control definitions
# ----------------------------------- #
- class:
    name: MissionActivationRequest
    # Mission activation requests encapsulate the ID of a desired mission to activate.
    # At present, only one mission can be activated so this is an empty message used only for notification.
    inherit:
      name: GcsCommand
- class:
    name: MissionManagerStatus
    # Mission manager status encapsulates the status of the mission manager and is relevant feedback for a mission activation request.
    # This aggregates FCModeController inputs missionState and flightModeRequest from AFC_Code/3.AFC_code_M/ModeControl/README.md.
    inherit:
      name: BusObject
    members:
      - name: mission_state
        type: MissionState
      - name: requested_mode
        type: Mode
# ----------------------------------- #
#  PDCU messages
# ----------------------------------- #
- class:
    name: PdcuSystemMode
    inherit:
      name: BusObject
    members:
      - name: current_mode
        type: PdcuModes
      - name: last_mode
        type: PdcuModes
- class:
    name: PdcuSequenceRequest
    inherit:
      name: BusObject
    members:
      - name: sequence
        type: PdcuSequence
      - name: sequence_control
        type: PdcuSequenceControl
- class:
    name: PdcuSequencingInformation
    inherit:
      name: BusObject
    members:
      - name: current_sequence
        type: PdcuSequence
      - name: sequence_status
        type: PdcuSequenceStatus
      - name: sequence_step
        type: uint8_t
      - name: sequence_substep
        type: uint8_t
      - name: requested_sequence
        type: PdcuSequence
      - name: request_status
        type: PdcuSequenceRequestStatus
- class:
    name: PdcuPowertrainStatus
    inherit:
      name: BusObject
    members:
      - name: battery_faults
        # @see flight_software/drivers/include/drivers/power_distro_control_unit/packets/powertrain_status/pdcu_battery_fault.h
        #      for index ordering (will be in order of data members).
        type: uint8_t[8]
      - name: battery_warnings
        # @see flight_software/drivers/include/drivers/power_distro_control_unit/packets/powertrain_status/pdcu_battery_warning.h
        #      for index ordering (will be in order of data members).
        type: uint8_t[8]
      - name: derate_reason
        type: uint64_t
      - name: error_code
        type: uint16_t
      - name: engine_error_active_status
        type: EngineFaultActiveStatus
      - name: faults
        type: uint32_t
      - name: warnings
        type: uint32_t
      - name: generator_fault
        type: uint16_t
- class:
    name: PdcuEngineStatus
    inherit:
      name: BusObject
    members:
      - name: battery_current_amps
        type: float
      - name: battery_voltage_volts
        type: float
      - name: fuel_flow_gph
        type: float
      - name: estimated_fuel_level
        type: float
      - name: measured_fuel_level
        type: float
      - name: fuel_pressure_psi
        type: float
      - name: fuel_pump_control_status
        type: PdcuEngineFuelPumpStates
      - name: inlet_air_temp_deg_c
        type: float
      - name: mode
        type: PdcuEngineMode
      - name: n1_rpm
        type: float
      - name: n2_rpm
        type: float
      - name: oil_pressure_psi
        type: float
      - name: oil_temp_deg_c
        type: float
      - name: power_bus_current_amps
        type: float
      - name: power_output_kw
        type: float
      - name: torque_nm
        type: float
      - name: exhaust_gas_temp_deg_c
        type: float
      - name: time_in_current_engine_mode
        type: TimeInHms
      - name: ecu_temp_deg_c
        type: int16_t
      - name: ecu_power_element_temp_deg_c
        type: int16_t
- class:
    name: PdcuPidStatus
    inherit:
      name: BusObject
    members:
      - name: battery_current_controller_gains
        type: PidGains
      - name: target_soc
        type: float
      - name: target_battery_current
        type: float
      - name: controller_output
        type: float
      - name: filtered_battery_current
        type: float
      - name: is_enabled
        type: bool
      - name: soc_controller_gains
        type: PidGains
- class:
    name: PdcuGeneratorStatus
    inherit:
      name: BusObject
    members:
      - name: current_amps
        type: float
      - name: measured_torque_nm
        type: float
      - name: output_power_kw
        type: float
      - name: rotor_temp_deg_c
        type: float
      - name: rpm
        type: float
      - name: stator_temp_deg_c
        type: float
      - name: status
        type: PdcuGeneratorStatusEnum
      - name: inverter_pulse_detection
        type: PdcuInverterPulseDetection
      - name: torque_command_nm
        type: float
      - name: torque_request_nm
        type: float
      - name: voltage_volts
        type: float
      - name: inverter_driver_temp_deg_c
        type: float
      - name: inverter_heatsink_temp_deg_c
        type: float
- class:
    name: PdcuCoolingSystemStatus
    inherit:
      name: BusObject
    members:
      - name: fan_rpm
        type: uint16_t
      - name: flowrate_gph
        type: uint16_t
      - name: pressure_psi
        type: float
      - name: inlet_temp_deg_c
        type: uint16_t
      - name: outlet_temp_deg_c
        type: uint16_t
- class:
    name: PdcuGeneratorCoolingStatus
    inherit:
      name: PdcuCoolingSystemStatus
    members:
      - name: engine_oil_cooling_fan_status
        type: PdcuControlState
- class:
    name: PdcuInverterCoolingStatus
    inherit:
      name: PdcuCoolingSystemStatus
- class:
    name: PdcuBatteryPackStatus
    inherit:
      name: BusObject
    members:
      - name: fault_location
        type: uint16_t
      - name: isolation_monitor_test_status
        type: BatteryIsolationStatus
      - name: average_temp_deg_c
        type: float
      - name: current_amps
        type: float
      - name: energy_remaining_wh
        type: float
      - name: hvil_sense_volts
        type: float
      - name: max_cell_temp_deg_c
        type: float
      - name: min_cell_temp_deg_c
        type: float
      - name: max_allowed_discharge_current_amps
        type: float
      - name: max_allowed_charge_current_amps
        type: float
      - name: max_string_current_delta_amps
        type: float
      - name: precharge_voltage
        type: float
      - name: soc_percentage
        type: float
      - name: soh_percentage
        type: float
      - name: pack_voltage_volts
        type: float
      - name: min_cell_voltage_volts
        type: float
      - name: max_cell_voltage_volts
        type: float
      - name: min_cell_voltage_position
        type: uint16_t
      - name: max_cell_voltage_position
        type: uint16_t
      - name: bms_state
        type: BmsState
      - name: battery_system_status
        # see BmsSystemStatusBitmask enumerate for values
        type: uint16_t
      - name: high_side_isolation_monitor_resistance
        type: uint32_t
      - name: low_side_isolation_monitor_resistance
        type: uint32_t
      - name: shore_charging_state
        type: ShoreChargingState
      - name: shore_charging_contactor_states
        type: ShoreChargingContactorsStates
- class:
    name: PdcuBatteryPackOneStatus
    inherit:
      name: PdcuBatteryPackStatus
- class:
    name: PdcuBatteryPackTwoStatus
    inherit:
      name: PdcuBatteryPackStatus
- class:
    name: PdcuBatteryPackVersion
    inherit:
      name: BusObject
    members:
      - name: instance
        type: InstanceId
      - name: hw_version_major
        type: uint8_t
      - name: hw_version_minor
        type: uint8_t
      - name: bms_build
        type: uint8_t
      - name: bms_major
        type: uint8_t
      - name: bms_minor
        type: uint8_t
      - name: bms_patch
        type: uint8_t
- class:
    name: PdcuActuatorAndSensorStates
    inherit:
      name: BusObject
    members:
      - name: bitmasks
        type: uint8_t[7]
- class:
    name: PdcuAnalogSensorStates
    inherit:
      name: BusObject
    members:
      - name: generator_hall_sensor_output_amps
        type: float
      - name: battery_hall_sensor_output_amps
        type: float
- class:
    name: PdcuBattleModeStatus
    inherit:
      name: BusObject
    members:
      - name: pdcu_status
        type: bool
      - name: bms_one_status
        type: bool
      - name: bms_two_status
        type: bool
      - name: pdcu_cmd_status
        type: bool
      - name: bms_one_cmd_status
        type: bool
      - name: bms_two_cmd_status
        type: bool
- class:
    name: PdcuMaxPowerStatus
    inherit:
      name: BusObject
    members:
      - name: powerplant_max_power_kW
        type: float
- class:
    name: PdcuAvailableEnergyStatus
    inherit:
      name: BusObject
    members:
      - name: powerplant_energy_available_kWh
        type: float

- class:
    name: PdcuVersionInfo
    inherit:
      name: BusObject
    members:
      - name: major
        type: uint8_t
      - name: minor
        type: uint8_t
      - name: patch
        type: uint8_t
      - name: build
        type: uint8_t
      - name: bms_one
        type: BmsVersionInfo
      - name: bms_two
        type: BmsVersionInfo

# PDCU GCS Control Commands
#
- class:
    name: PdcuMasterSwitchCommand
    inherit:
      name: GcsCommand
    members:
      - name: switch_state
        type: PdcuControlState
- class:
    name: PdcuTargetSOCCommand
    inherit:
      name: GcsCommand
    members:
      # 0.0 - 100.0%
      - name: target_soc_percentage
        type: float
- class:
    name: PdcuTorqueControlAlgorithmCommand
    inherit:
      name: GcsCommand
    members:
      - name: tca_state
        type: PdcuControlState
- class:
    name: PdcuClearFaultsCommand
    inherit:
      name: GcsCommand
- class:
    name: PdcuStopCommand
    inherit:
      name: GcsCommand
- class:
    name: PdcuQuietCommand
    inherit:
      name: GcsCommand
    members:
      # true - enable, false - disable
      - name: enable
        type: bool
- class:
    name: PdcuBMSResetCommand
    inherit:
      name: GcsCommand
    members:
      - name: identity
        type: BmsIdentity
- class:
    name: HVBatteryContactorOverrideCommand
    inherit:
      name: GcsCommand
    members:
      # true - enable, false - disable
      - name: enable
        type: bool
- class:
    name: MotorContactorOverrideCommand
    inherit:
      name: GcsCommand
    members:
      # true - enable, false - disable
      - name: enable
        type: bool
- class:
    name: PdcuBattleModeCommand
    inherit:
      name: GcsCommand
    members:
      # true - on, false - off
      - name: pdcu
        type: bool
      - name: bms_one
        type: bool
      - name: bms_two
        type: bool
- class:
    name: PdcuSetGeneratorTorqueCommand
    inherit:
      name: GcsCommand
    members:
      - name: ramp_rate_Nm_per_sec
        type: uint16_t
      - name: torque_Nm
        type: uint16_t

- class:
    name: PdcuSetBmsModeCommand
    inherit:
      name: GcsCommand
    members:
      - name: identity
        type: BmsIdentity
      - name: command
        type: PcduBmsModeCommand

- class:
    name: DebugLog
    inherit:
      name: BusObject
    members:
      - name: level
        type: DebugLogLevel
      - name: string
        type: uint8_t[256]

- class:
    name: DataLogStatistics
    inherit:
      name: BusObject
    members:
      - name: avg_dt_sec
        type: double
      - name: avg_log_size_bits
        type: double
      - name: memory_full_count
        type: uint64_t
      - name: failed_udp_count
        type: uint64_t
      - name: successful_udp_count
        type: uint64_t
      - name: read_ready_count
        type: uint32_t
      - name: head
        type: uint8_t
      - name: tail
        type: uint8_t
      - name: notify_reader_fail_count
        type: uint32_t
      - name: log_count_since_last_read
        type: uint32_t

# ------------------------------------ #
# integration_sim message definitions
# ----------------------------------- #
- class:
    name: SimGroundTruthState
    namespace: integration_sim
    inherit:
      name: BusObject
    members:
      # Unless otherwise specified, the values are in
      # gazebo world coordinate frame
      - name: sim_time
        type: double
      - name: real_time
        type: double
      - name: flight_software_timestamp_ns
        type: int64_t
      - name: vehicle_position_m
        type: double[3]
      - name: vehicle_orientation_rpy
        type: double[3]
      - name: vehicle_linear_velocity_m_s
        type: double[3]
      - name: vehicle_angular_velocity_rad_s
        type: double[3]
      - name: vehicle_aero_body_forces_n
        type: double[3]
      - name: vehicle_aero_moments_nm
        type: double[3]
      - name: vertical_lift_thruster_force_n
        type: double[8]
      - name: vertical_lift_thruster_torque_nm
        type: double[8]
      - name: forward_propulsion_thruster_force_n
        type: double[4]
      - name: forward_propulsion_thruster_torque_nm
        type: double[4]

# ----------------------------------- #
#  ECBU messages
#       Source: D1445-001-519_A_Communications_Interface_Control_Document_DC-24_ECB_LRM.pdf
# ----------------------------------- #
- class:
    name: EcbuGroupSwitchCommandResponse
    inherit:
      name: AvionicsState
    members:
      - name: ecb_state
        type: EcbState[24]
- class:
    name: EcbuGroupStateRequestResponse
    inherit:
      name: AvionicsState
    members:
      - name: ecb_state
        type: EcbState[24]
- class:
    name: EcbuGroupCurrentRequestResponse
    inherit:
      name: AvionicsState
    members:
      - name: group_id
        type: EcbuCurrentGroup
      - name: ecb_current
        type: float[12]
- class:
    name: EcbuIndividualBreakerCommandResponse
    inherit:
      name: AvionicsState
    members:
      - name: is_absent
        type: bool
      - name: is_sbit_complete
        type: bool
      - name: is_dc_ecb_installed
        type: bool
      - name: trip_cause
        type: EcbTripCause
      - name: ecb_state
        type: EcbState
      - name: is_wdt_reset
        type: bool
      - name: is_fail_open_fault
        type: bool
      - name: is_fail_short_fault
        type: bool
      - name: is_voltage_sensor_fault
        type: bool
      - name: is_circuit_test_fault
        type: bool
      - name: is_discrete_blocked
        type: bool
      - name: is_switch_command_restricted
        type: bool
      - name: is_breaker_command_restricted
        type: bool
      - name: is_discrete_activate_configured
        type: bool
      - name: is_ecbc_faulted
        type: bool
      - name: is_output_enabled
        type: bool
      - name: is_mon_comm_fault
        type: bool
      - name: is_master_comm_fault
        type: bool
      - name: is_overload_protect_fault
        type: bool
      - name: is_ecbc_error_asserted
        type: bool
      - name: is_output_inhibited
        type: bool
      - name: ecb_current_amps
        type: float
      - name: ecb_voltage_volts
        type: float
      - name: programmed_rating_amps
        type: float
      - name: max_current_amps
        type: float
      - name: max_rating_amps
        type: float
- class:
    name: EcbuDcLrmStatusRequestResponse
    inherit:
      name: AvionicsState
    members:
      - name: id_bits
        type: EcbIdentificationBitState[8]
      - name: og_selection
        type: EcbGeneralPurposeSelection
      - name: is_og_active_high
        type: bool
      - name: is_og_enabled
        type: bool
      - name: og_gpi_bits
        type: EcbGeneralPurposeBitState[4]
      - name: is_config_invalid
        type: bool
      - name: is_monitor_fault
        type: bool
      - name: is_unit_fault
        type: bool
      - name: is_monitor_bus_absent
        type: bool
      - name: is_master_bus_absent
        type: bool
      - name: is_self_test_fault
        type: bool
      - name: is_memory_fault
        type: bool
      - name: is_monitor_wdt_fault
        type: bool
      - name: is_master_wdt_fault
        type: bool
      - name: is_monitor
        type: bool
      - name: is_airborne_state
        type: bool
      - name: is_ubit_complete
        type: bool
      - name: is_utility_bus_power_present
        type: bool
      - name: main_power_voltage
        type: float
      - name: util_power_voltage
        type: float
      - name: dc_supply_power_voltage
        type: float
      - name: dc_holdup_power_voltage
        type: float
- class:
    name: EcbuUtcAircraftStateCommandResponse
    inherit:
      name: AvionicsState
    members:
      - name: acknowledged
        type: bool

# ----------------------------------- #
# Generic ETC definitions
# ----------------------------------- #
- class:
    name: GenericEtcRequest
    # ETC requests encapsulate an ETC type along with optional parameters. Unknown corresponds to a cancel/null request.
    inherit:
      name: GcsCommand
    members:
      # This required generic ID is used in various contexts to check if a relevant ETC is currently active.
      - name: type
        type: uint32_t
      # These optional generic parameters are interpeted based on the context of where an ETC is active.
      # For example, these parameters could be used to send an RPM command value or PDCU PID gains.
      - name: parameter_values
        type: double[4]
- class:
    name: GcsResponse
    # GCS Response provides a base for data required in all responses to requests from the GCS.
    inherit:
      name: BusObject
    members:
      - name: transaction_id
        type: uint32_t
- class:
    name: GcsRequestResponse
    # The immediate response of flight software's GCS command interface to a command from the GCS.
    # This message is intended for GCS requests without specific response data.
    inherit:
      name: GcsResponse
    members:
      - name: response
        type: GcsRequestResponseState
- class:
    name: GcsRequestStatus
    # The potentially delayed status of flight software's GCS command interface to a command from the GCS.
    # This message is intended for GCS requests without specific response data.
    inherit:
      name: GcsResponse
    members:
      - name: status
        type: GcsRequestStatusState

- class:
    name: LogRecordMetadata
    # This message represents metadata for log record entries in Elroy log files.
    # In v1.0 of the Elroy log file format, a log file is comprised of multiple
    # records, and each record has a LogRecordMetadata message at the beginning.
    # This message describes a few things about the record (which represents a
    # message received over UDP) and how it was received over the wire.
    inherit:
      name: BusObject
    members:
      # A unique identifier for the connection from which this message came.
      # For example, messages received from a particular IP address from a
      # particular port will all have the same `connection_id`. The actual value
      # of the `connection_id` has no special meaning apart from being distinct
      # from other `connection_id`s in the same log file.
      - name: connection_id
        type: uint32_t
      # Length of the binary data chunk in this record
      - name: data_len
        type: uint32_t
      # A timestamp for when the message was received. This is defined as
      # nanoseconds since the Unix epoch.
      - name: received_time_nsec
        type: uint64_t
      # A string representing the ipv4 address of the entity that sent this
      # message, e.g. `192.168.0.4`. The string is always of length 16, and is
      # left-padded with zeros. That is, "192.168.0.1" would appear as
      # "00000192.168.0.1"
      - name: ip_address
        type: uint8_t[16]
      # The UDP port from which the message was sent.
      - name: from_udp_port
        type: uint16_t
      # The UDP port to which the message was sent.
      - name: to_udp_port
        type: uint16_t
      # The git SHA1 of the `elroy_common_msg` repo that was used to serialize
      # the messages in this chunk, represented as a string
      - name: elroy_common_msg_repo_sha1
        type: uint8_t[40]

- class:
    name: LoggerReceiverStatus
    inherit:
      name: BusObject
    members:
      # Number of records received by the logger
      - name: records_logged
        type: uint32_t
      # Number of records received per second
      - name: records_per_sec
        type: uint32_t
      # Amount of data stored in this log file (bytes)
      - name: data_logged_kilobytes
        type: uint32_t
      # Data rate (kilobytes/sec)
      - name: data_logged_kb_per_sec
        type: uint32_t
      # Amount of data storage space remaining on the logger computer
      - name: disk_space_remaining_megabytes
        type: uint32_t
      # The amount of time remaining before the logger computer runs out of space
      - name: disk_space_remaining_minutes
        type: uint32_t

- class:
    name: SystemActivityStatistics
    inherit:
      name: BusObject
    members:
      - name: system_component_instance
        type: SystemComponentInstance
      - name: total_cpu_usage_in_percent
        type: float
- class:
    name: TaskActivityStatistics
    inherit:
      name: BusObject
    members:
      - name: system_component_instance
        type: SystemComponentInstance
      - name: cpu_usage_in_percent
        type: float
      - name: stack_usage_in_percent
        type: float
      - name: thread_name
        type: uint8_t[64]

- class:
    name: LoadChannelState
    inherit:
      name: AvionicsState
    members:
      - name: voltage_volts
        type: float
      - name: current_amps
        type: float
      - name: switch_temp_c
        type: float
      - name: switch_cmd
        type: bool
      - name: switch_state
        type: bool
      - name: is_hw_override
        type: bool
      - name: latched_faults
        type: uint16_t

- class:
    name: FlightComputerConfigState
    inherit:
      name: AvionicsState
    members:
      - name: run_mode
        type: FlightComputerRunMode

# ----------------------------------- #
# GNC
# ----------------------------------- #
# The GNC schema is auto-generated by a MATLAB script. The script resolves stylistic changes on the member naming scheme.
# The script however does not modify the name of the data message at all, specififcally we do not remove the 'BusObj'
# signifier at the end of message name. This helps resolve the difference between message types that have been duplicated.
# The goal is to eventually remove duplicate struct data types and then fix the naming. This is blocked by the fact that
# some of the duplicated data structures actually have slightly different structures
- class:
    name: C2Interpreter
    namespace: gnc
    inherit:
      name: BusObject
    members:
      - name: external_commands
        type: ExternalCommandsBusObj
      - name: external_commands_health
        type: SystemHealthReportBusObj
      - name: log_frame_count
        type: uint32_t

- class:
    name: HealthMonitor
    namespace: gnc
    inherit:
      name: BusObject
    members:
      - name: vehicle_health
        type: VehicleHealthEnum
      - name: log_frame_count
        type: uint32_t

- class:
    name: MissionSelector
    namespace: gnc
    inherit:
      name: BusObject
    members:
      - name: selected_mission
        type: MissionTypeEnum
      - name: log_frame_count
        type: uint32_t

- class:
    name: MissionManager
    namespace: gnc
    inherit:
      name: BusObject
    members:
      - name: flight_mode_request
        type: ModeEnum
      - name: mission_state
        type: MissionStateEnum
      - name: mission_item
        type: MissionItemBusObj
      - name: health
        type: SystemHealthReportBusObj
      - name: log_frame_count
        type: uint32_t

- class:
    name: SensorFusion
    namespace: gnc
    inherit:
      name: BusObject
    members:
      - name: imu_data
        type: ImuDataBusObj
      - name: nav_data
        type: NavDataBusObj
      - name: air_data
        type: AirDataBusObj
      - name: health
        type: SystemHealthReportBusObj
      - name: raw_ins
        type: InsBusObj
      - name: log_frame_count
        type: uint32_t

- class:
    name: ContingencyManager
    namespace: gnc
    inherit:
      name: BusObject
    members:
      - name: contingency_states
        type: uint8_t[9]
      - name: contingency_action
        type: ContingencyActionEnum
      - name: log_frame_count
        type: uint32_t

- class:
    name: ETC
    namespace: gnc
    inherit:
      name: BusObject
    members:
      - name: etc_input
        type: EtcInputBusObj
      - name: etc_logging
        type: EtcLoggingBusObj
      - name: log_frame_count
        type: uint32_t

- class:
    name: FCModeController
    namespace: gnc
    inherit:
      name: BusObject
    members:
      - name: fc_mode_controller_output
        type: ModeControlOutputBusObj
      - name: log_frame_count
        type: uint32_t

- class:
    name: TrajGen
    namespace: gnc
    inherit:
      name: BusObject
    members:
      - name: outer_loop_cmds
        type: OuterLoopCmdsBusObj
      - name: mission_item_objective_state
        type: MissionItemObjectiveStateEnum
      - name: log_frame_count
        type: uint32_t

- class:
    name: OuterLoop
    namespace: gnc
    inherit:
      name: BusObject
    members:
      - name: inner_loop_cmds
        type: InnerLoopCmdsBusObj
      - name: etc_output
        type: EtcOutputBusObj
      - name: saturation_mode
        type: SaturationMode[36]
      - name: health
        type: SystemHealthReportBusObj
      - name: log_frame_count
        type: uint32_t

- class:
    name: InnerLoop
    namespace: gnc
    inherit:
      name: BusObject
    members:
      - name: acceleration_cmds
        type: AccelerationCmdsBusObj
      - name: etc_output
        type: EtcOutputBusObj
      - name: saturation_mode
        type: SaturationMode[30]
      - name: il_health
        type: SystemHealthReportBusObj
      - name: log_frame_count
        type: uint32_t

- class:
    name: Mixer
    namespace: gnc
    inherit:
      name: BusObject
    members:
      - name: actuator_force_moment_cmds
        type: ActuatorForceMomentCmdsBusObj
      - name: health
        type: SystemHealthReportBusObj
      - name: mixer_power_approximation
        type: MixerPowerApproximationBusObj
      - name: log_frame_count
        type: uint32_t

- class:
    name: ActuatorInverse
    namespace: gnc
    inherit:
      name: BusObject
    members:
      - name: actuator_cmds
        type: ActuatorCmdsBusObj
      - name: actuator_inverse_health
        type: SystemHealthReportBusObj
      - name: actuator_inverse_power_approximation
        type: ActuatorInversePowerApproximationBusObj
      - name: log_frame_count
        type: uint32_t

# Line of sight radio definitions
- class:
    name: StreamCasterSignalReport
    inherit:
      name: BusObject
    members:
      - name: component
        type: SystemComponentInstance
      # The following data are derived from page 145 of the StreamCaster 4000-series MIMO Radio User Manual:
      # https://elroyair.jamacloud.com/attachment/4706/v/StreamCaster%204000-series%20MIMO%20Radio%20User%20Manual%20v4.0.2.10.pdf
      - name: revision_number
        type: float
      - name: radio_ip
        type: uint8_t[16]
      - name: radio_virtual_ip
        type: uint8_t[16]
      - name: raw_signal_power_dbm
        type: int32_t[4]
      - name: raw_noise_power_dbm
        type: int32_t
      - name: sync_signal_power
        type: int32_t
      - name: sync_noise_power
        type: int32_t
      - name: transmitter_node_id
        type: uint16_t
      - name: sequence_number
        type: uint32_t

- class:
    name: StreamCasterTemperatureReport
    inherit:
      name: BusObject
    members:
      - name: component
        type: SystemComponentInstance
      # The following data are derived from page 148 of the StreamCaster 4000-series MIMO Radio User Manual:
      # https://elroyair.jamacloud.com/attachment/4706/v/StreamCaster%204000-series%20MIMO%20Radio%20User%20Manual%20v4.0.2.10.pdf
      - name: revision_number
        type: float
      - name: current_temperature
        type: int32_t
      - name: maximum_temperature
        type: int32_t
      - name: overheat_count
        type: uint32_t

- class:
    name: StreamCasterVoltageReport
    inherit:
      name: BusObject
    members:
      - name: component
        type: SystemComponentInstance
      # The following data are derived from page 149 of the StreamCaster 4000-series MIMO Radio User Manual:
      # https://elroyair.jamacloud.com/attachment/4706/v/StreamCaster%204000-series%20MIMO%20Radio%20User%20Manual%20v4.0.2.10.pdf
      - name: revision_number
        type: float
      - name: current_voltage
        type: float
      - name: minimum_voltage
        type: float
      - name: maximum_voltage
        type: float
      - name: undervoltage_count
        type: uint32_t
      - name: overvoltage_count
        type: uint32_t

- class:
    name: ThrusterRateLimiterStatus
    inherit:
      name: BusObject
    members:
      - name: mode
        type: ThrusterRateLimiterModeEnum
      - name: activation_torque_nm
        type: float
      - name: thruster_command_torque_nm
        type: float
      - name: thruster_delta
        type: ThrusterCommands
      - name: max_battery_current_amps
        type: float
